# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
---
# https://github.com/apache/superset/blob/master/Dockerfile
name: charmed-superset-rock
base: ubuntu@22.04
version: 2.1.0-22.04-edge
summary: Charmed Superset ROCK OCI
description: |
  Superset is a business intelligence tool that is fast, lightweight,
  intuitive, and loaded with options that make it easy for users
  to explore and visualize their data.
license: Apache-2.0

services:
  superset-ui:
    override: replace
    summary: "superset-ui service"
    startup: disabled
    command: "/app/k8s/k8s-bootstrap.sh"
    environment:
      CHARM_FUNCTION: "app-gunicorn"
      SUPERSET_SECRET_KEY: "supersetR0cks!"
      ADMIN_PASSWORD: "admin"
      SUPERSET_LOAD_EXAMPLES: True

platforms:
  amd64:

parts:
  backend:
    plugin: python
    source: https://downloads.apache.org/superset/2.1.0/apache-superset-2.1.0-source.tar.gz  # yamllint disable-line
    source-checksum: sha512/62d240555ea50156fd16ad6dbc6fb26b86ca5319d0528e60cd4fbcb9fbeb9d529acfb43e272883d578df87e609a541a0116dfa8f4a955a3aeca3538adf58852a
    source-type: tar
    build-packages:
      - build-essential
    stage-packages:
      - python3.10-venv
    build-environment:
      - APP_HOME: "/app"
      - SOURCE: "https://downloads.apache.org/superset"
      - VERSION: "2.1.0"
      - TAR_FILE: "apache-superset-2.1.0-source.tar.gz"
      - DIST_PACKAGES: "usr/local/lib/python3.10/dist-packages/"
    stage:
      - apache_superset.egg-info
      - build
      - requirements
      - scripts
      - setup.cfg
      - setup.py
      - superset
      - superset-frontend

  local-files:
    plugin: dump
    source: ./startup-scripts
    organize:
      run-server.sh: app/k8s/run-server.sh
      k8s-init.sh: app/k8s/k8s-init.sh
      k8s-bootstrap.sh: app/k8s/k8s-bootstrap.sh
      rock-requirements.txt: requirements/rock-requirements.txt
    stage:
      - app/k8s/run-server.sh
      - app/k8s/k8s-init.sh
      - app/k8s/k8s-bootstrap.sh
      - requirements/rock-requirements.txt

  frontend:
    after: [backend]
    plugin: nil
    build-snaps:
      - node/14/stable
    build-environment:
      - ASSETS_DIR: "/lib/python3.10/site-packages/superset/static/assets"
    override-build: |
      # Prepare for asset creation
      cd ${CRAFT_STAGE}/superset-frontend

      # Install missing frontend dependency
      npm install currencyformatter.js --save

      # Install frontend dependencies and build assets
      npm ci
      npm run build -- --output-path=/dist

      # Copy assets to CRAFT_PRIME
      mkdir -p "${CRAFT_PRIME}${ASSETS_DIR}"
      cp -r /dist/* "${CRAFT_PRIME}${ASSETS_DIR}"

  gunicorn-app:
    after: [backend, frontend, local-files]
    plugin: python
    build-packages:
      - build-essential
      - pkg-config
      - libmysqlclient-dev
    stage-packages:
      - python3.10-venv
    build-environment:
      - APP_HOME: "/app"
      - DIST_PACKAGES: "/usr/local/lib/python3.10/dist-packages"
    override-build: |
      # Install superset requirements
      pip install --upgrade setuptools pip \
        "cython<3.0.0" \
        --no-build-isolation pyyaml==5.4.1 \
        -r ${CRAFT_STAGE}/requirements/base.txt --target=/${DIST_PACKAGES} \
        -r ${CRAFT_STAGE}/requirements/rock-requirements.txt --target=/${DIST_PACKAGES}

      # Install Superset in editable mode
      pip install -e .

      # Copy packages to PRIME
      mkdir -p ${CRAFT_PART_INSTALL}${DIST_PACKAGES}
      cp -r ${DIST_PACKAGES}/* ${CRAFT_PART_INSTALL}${DIST_PACKAGES}
      cp -r . ${CRAFT_PART_INSTALL}${APP_HOME}
    stage:
      - usr/local/lib/python3.10/dist-packages
      - app

  overlay-pkgs:
    plugin: nil
    overlay-packages:
      - ca-certificates
      - vim
    stage-packages:
      - libecpg-dev
      - libmysqlclient-dev
